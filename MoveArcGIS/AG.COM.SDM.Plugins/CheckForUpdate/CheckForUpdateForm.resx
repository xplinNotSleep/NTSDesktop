<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAaoAAAAkCAYAAADYQn7qAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADJmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS42LWMxMzggNzkuMTU5ODI0LCAyMDE2LzA5LzE0LTAxOjA5OjAxICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxNyAoV2luZG93cykiIHhtcE1NOkluc3Rh
        bmNlSUQ9InhtcC5paWQ6RUUwMzY0M0ZDRkJDMTFFOTgzQTk4NDE5REJCNUE5MkIiIHhtcE1NOkRvY3Vt
        ZW50SUQ9InhtcC5kaWQ6RUUwMzY0NDBDRkJDMTFFOTgzQTk4NDE5REJCNUE5MkIiPiA8eG1wTU06RGVy
        aXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpFRTAzNjQzRENGQkMxMUU5ODNBOTg0MTlE
        QkI1QTkyQiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpFRTAzNjQzRUNGQkMxMUU5ODNBOTg0MTlE
        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
        RK5CYII=
</value>
  </data>
</root>